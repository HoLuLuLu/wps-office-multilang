<html>
<script src="../../../css/help.js" >
</script>
<head>
<link rel="stylesheet" href="../../../css/style.css" type="text/css">
<link rel="stylesheet" href="../../../css/styleOfTable.css" type="text/css">
<meta http-equiv="Content-Language" content="zh-cn">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">


<title>LOOKUP</title>
<object type="application/x-oleobject" classid="clsid:1e2gbd0-dab9-11d0-b93a-00c04fc99f9e">
  <param name="Keyword" value="LOOKUP">
  <param name="Keyword" value="函数">
</object>
</head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; position: absolute; left: 0; top: 0; margin: 0" bordercolor="#111111" width="100%" id="AutoNumber1">
  <tr>
    <td width="50%">
    <img border="0" src="../../../images/Ribbon/title1.gif" width="312" height="69"></td>
    <td width="50%">
    <p align="right">
    <img border="0" src="../../../images/Ribbon/logo.gif" width="120" height="26"></td>
  </tr>
</table>
<p>　</p>
<p>　</p>
<h1>LOOKUP</h1>
<p>返回向量（单行区域或单列区域）或<a href="javascript:viewsamplea()" style="text-decoration: none">数组</a><font color="#339933"><span id="samplea" style="display: none">（
  用于建立可生成多个结果或可对在行和列中排列的一组参数进行运算的单个公式。数组区域共用一个公式；数组常量是用作参数的一组常量）</span></font>中的数值。函数 
LOOKUP 有两种语法形式：向量和数组。函数 LOOKUP 
的向量形式是在单行区域或单列区域（向量）中查找数值，然后返回第二个单行区域或单列区域中相同位置的数值；函数 LOOKUP 
的数组形式在数组的第一行或第一列查找指定的数值，然后返回数组的最后一行或最后一列中相同位置的数值。</p>
<p>函数 LOOKUP 有两种语法形式：向量和数组。</p>
<P><span id="mydiv1" class="charr1"></span><a href="javascript:viewsample1()" style="text-decoration: none">&nbsp;语法 1（向量）</a></P>
<div id="sample1" style="display=none;">
<p></p>
<p>向量为只包含一行或一列的区域。函数 LOOKUP 
的向量形式是在单行区域或单列区域（向量）中查找数值，然后返回第二个单行区域或单列区域中相同位置的数值。如果需要指定包含待查找数值的区域，则可以使用函数 
LOOKUP 的这种形式。函数 LOOKUP 的另一种形式为自动在第一列或第一行中查找数值。</p>
<p><b>LOOKUP</b>(<b>lookup_value</b>,<b>lookup_vector</b>,<b>result_vector</b>)</p>
<p>L<span lang="en-us">ookup</span>_value 为函数 LOOKUP 在第一个向量中所要查找的数值。<span lang="en-us">lookup</span>_value 可以为数字、文本、逻辑值或包含数值的名称或引用。<br>
<br>
L<span lang="en-us">ookup</span>_vector 为只包含一行或一列的区域。<span lang="en-us">lookup</span>_vector 的数值可以为文本、数字或逻辑值。</p>
<p>

</p>
<p>Result_vector&nbsp;&nbsp; 只包含一行或一列的区域，其大小必须与 lookup_vector 相同。</p>
<p><b>说明</b></p>
<ul>
  <li>如果函数 LOOKUP 找不到 lookup_value，则查找 lookup_vector 中小于或等于 
  lookup_value 的最大数值。 </li>
  <li>如果 lookup_value 小于 lookup_vector 中的最小值，函数 LOOKUP 返回错误值 #N/A。</li>
</ul>
<p><b>示例</b></p>
<p>如果您将示例复制到空白工作表中，可能会更易于理解该示例。</p>

<br>
  <table width="298">
	<tr>
		<th class="thEmpty" width="19"></th>
	    <th class="th1" width="115">A</th>
   	    <th class="th2" width="150">B</th>
	</tr>
	<tr>
		<td class="tdSeqence" width="19"><b>1</b></td>
		<td class = "th1" width="115">频率</td>
		<td class = "th2" width="150">颜色</td>
	</tr>
	<tr>
		<td class="tdSeqence" width="19"><b>2</b></td>
		<td class ="ll" width="117">4.14</td>
		<td class ="ll" width="150">幽红</td>
	</tr>
		<tr>
		<td class="tdSeqence" width="19">3</td>
		<td class ="ll" width="117">4.91</td>
		<td class ="ll" width="150">轻橙</td>
	</tr>

	<tr>
		<td class="tdSeqence" width="19">4</td>
		<td class ="ll" width="117">5.17</td>
		<td class ="ll" width="150">艳黄</td>
	</tr>
		<tr>
		<td class="tdSeqence" width="19">5</td>
		<td class ="ll" width="117">5.77</td>
		<td class ="ll" width="150">湖青</td>
	</tr>
		<tr>
		<td class="tdSeqence" width="19">6</td>
		<td class ="ll" width="117">6.39</td>
		<td class ="ll" width="150">醺蓝</td>
	</tr>


	</table>
	</br>
	<table width="547">
	<tr>
		<th class="thEmpty" width="20"></th>
	    <th class="th1" width="141"><b>公式</b></th>
   	    <th class="th2" width="166"><b>说明（结果）</b></th>
	</tr>
		<tr>
		<th class="thEmpty" width="20"></th>
		<td class ="ll" width="148" valign="top">=LOOKUP(4.91,A2:A6,B2:B6)</td>
		<td class ="ll" width="365">在 A 列中查找 4.91，并返回同一行 B 列的值 (轻橙)</td>
	</tr>
	<tr>
		<th class="thEmpty" width="20"></th>
		<td class ="ll" width="148" valign="top">=LOOKUP(5.00,A2:A6,B2:B6)</td>
		<td class ="ll" width="365">在 A 列中查找 5.00（最接近的下一个值为 4.91），并返回同一行 B 列的值 (轻橙)</td>
	</tr>
	<tr>
		<th class="thEmpty" width="20"></th>
		<td class ="ll" width="148" valign="top">=LOOKUP(7.66,A2:A6,B2:B6)</td>
		<td class ="ll" width="365">在 A 列中查找 7.66（最接近的下一个值为 6.39），并返回同一行 B 列的值 
        (醺蓝)</td>
	</tr>
	<tr>
		<th class="thEmpty" width="20"></th>
		<td class ="ll" width="148" valign="top">=LOOKUP(0,A2:A6,B2:B6)</td>
		<td class ="ll" width="365">在 A 列中查找 0，由于 0 小于查找向量 A2:A7 中的最小值，所以返回错误值 
        (#N/A)</td>
	</tr>
</table>

</DIV>

<P><span id="mydiv4" class="charr1"></span><a href="javascript:viewsample4()" style="text-decoration: none">&nbsp;语法 2（数组）</a></P>
<div id="sample4" style="display=none; ">
<p></p>
<p>函数 LOOKUP 
的数组形式是在数组的第一行或第一列中查找指定数值，然后返回最后一行或最后一列中相同位置处的数值。如果需要查找的数值在数组的第一行或第一列，就可以使用函数 
LOOKUP 的这种形式。当需要指定列或行的位置时，可以使用函数 LOOKUP 的其他形式。</p>
<p><b>LOOKUP</b>(<b>lookup_value</b>,<b>array</b>)</p>
<p>L<span lang="en-us">ookup</span>_value&nbsp;&nbsp; 为函数 LOOKUP 在数组中所要查找的数值。LOOKUP_value 
可以为数字、文本、逻辑值或包含数值的名称或引用 </p>
<ul>
  <li>
  <p>如果函数 LOOKUP 找不到 lookup_value，则使用数组中小于或等于 lookup_value 的最大数值。</li>
  <li>
  <p>如果 lookup_value 小于第一行或第一列（取决于数组的维数）的最小值，函数 LOOKUP 返回错误值 #N/A。 </li>
</ul>
<p>Array&nbsp;&nbsp; 为包含文本、数字或逻辑值的单元格区域，它的值用于与 lookup_value 进行比较。函数 
LOOKUP 
的数组形式与函数 HLOOKUP 和函数 VLOOKUP 非常相似。不同之处在于函数 HLOOKUP 在第一行查找 lookup_value，函数 
VLOOKUP 在第一列查找，而函数 LOOKUP 则按照数组的维数查找。 </p>
<ul>
  <li>
  <p>如果数组所包含的区域宽度大，高度小（即列数多于行数），函数 LOOKUP 在第一行查找 lookup_value。</li>
  <li>
  <p>如果数组为正方形，或者所包含的区域高度大，宽度小（即行数多于列数），函数 LOOKUP 在第一列查找 lookup_value。</li>
  <li>
  <p>函数 HLOOKUP 和函数 VLOOKUP 允许按行或按列索引，而函数 LOOKUP 总是选择行或列的最后一个数值。</li>
</ul>
<p><b>示例</b></p>
<p>如果您将示例复制到空白工作表中，可能会更易于理解该示例。</p>


	<table width="532" >
	<tr>
		<th class="thEmpty" width="20" ></th>
	    <th class="th1" width="196"><b>公式</b></th>
   	    <th class="th2" width="302"><b>说明（结果）</b></th>
	</tr>
		<tr>
		<th class="thEmpty" width="20" ></th>
		<td class ="ll" width="196" valign="top">=LOOKUP(&quot;C&quot;,{&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;;1,2,3,4})</td>
		<td class ="ll" width="302">在数组的第一行中查找“C”，并返回同一列中最后一行的值 (3)</td>
	</tr>
	<tr>
		<th class="thEmpty" width="20" ></th>
		<td class ="ll" width="196" valign="top">=LOOKUP(&quot;bump&quot;,{&quot;a&quot;,1;&quot;b&quot;,2;&quot;c&quot;,3})</td>
		<td class ="ll" width="302">在数组的第一行中查找“bump”，并返回同一行中最后一列的值 (2)</td>
	</tr>
		<tr>
		<th class="thEmpty" width="20" ></th>
	</tr>
</table>　

</div>

<p>
<span id="mydiv3" class="charr1"></span><a href="javascript:viewsample3()" style="text-decoration: none">
  &nbsp;提示</a></P>
<div id="sample3" style="display=none; ">
<p>LOOKUP_vector 的数值必须按升序排序：...、-2、-1、0、1、2、...、A-Z、FALSE、TRUE；否则，函数 LOOKUP 
不能返回正确的结果。文本不区分大小写。</p>
</div>
</p>

<p>　</p>
<p><b>相关功能</b></p>
<p>
<a href="functionlist_lookup.htm">查找与引用函数</a></p>
<p><a href="function_Index.htm">INDEX</a></p>
<p><a href="function_VLOOKUP.htm">VLOOKUP</a></p>
<p><a href="function_HLookup.htm">HLOOKUP</a></p>
<p>　</p>



</body>

</html>